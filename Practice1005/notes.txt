Zen of Python

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless expilcitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!


Python is a dynamic language.

Higher level language :  does not require a compiler.
Compilation happens during runtime.

The difference between a tuple and a list in memory is that a tuple takes up less memory. 

A list, because it can mutate, has memory allocated for changes.


SCOPE / Namespace

When you are working with multiple python files at once, you are able to point from one file to the other by using modules

All files are modules
not all modules are files

Start with the program
read it. Think about it.
Write down a plan

Start working on it.

When you hit an issue, look at solutions and ask for help



